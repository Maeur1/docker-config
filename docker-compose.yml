version: '3.8'
services:

  ngnix-manager:
    container_name: ngnix-proxy-manager
    image: jc21/nginx-proxy-manager:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - ./nginx-proxy-manager-config.json:/app/config/production.json
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    depends_on:
      - mysql
 
  wordpress:
    container_name: wordpress
    image: wordpress
    restart: unless-stopped
    links:
      - mysql
    environment:
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
    ports:
      - "8888:80"

  mysql:
    container_name: mysql
    restart: always
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ${DATABASE_ROOT}:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
    ports:
      - "3306:3306"


  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${CONFIG_ROOT}/jackett:/config # config files

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/sonarr:/config # config files
      - ${MEDIA_ROOT}/complete/tv:/tv # tv shows folder
      - ${MEDIA_ROOT}/downloads:/downloads # download folder

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/radarr:/config # config files
      - ${MEDIA_ROOT}/complete/movies:/movies # movies folder
      - ${MEDIA_ROOT}/downloads:/downloads # download folder

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${CONFIG_ROOT}/bazarr:/config
      - ${MEDIA_ROOT}/complete/movies:/movies
      - ${MEDIA_ROOT}/complete/tv:/tv
    environment:
      - UID=${PUID}
      - GIP=${PGID}
      - TZ=${TZ}

        #  jellyfin:
        #restart: always
        #container_name: jellyfin
        #image: jellyfin/jellyfin:unstable
        #network_mode: host
        #volumes:
        #   - ${CONFIG_ROOT}/jellyfin:/config
        #  - /tmp/cache:/config/cache # temp transcoded files
        #  - /tmp/transcodes:/config/data/transcodes
        #  - ${MEDIA_ROOT}/complete:/media # media library
        #devices:
        #  - /dev/dri/renderD128:/dev/dri/renderD128
        #  - /dev/dri/card0:/dev/dri/card0
        #environment:
        #  - UID=${PUID}
        #  - GID=${PGID}
        #  - TZ=${TZ}
        #privileged: true

  hassio:
    image: homeassistant/amd64-hassio-supervisor
    container_name: hassio
    privileged: true
    entrypoint: ["/bin/bash", "-c", "/scripts/start_hassio.sh"]
    security_opt:
      - seccomp:unconfined
    environment:
      - HOMEASSISTANT_REPOSITORY=homeassistant/qemux86-64-homeassistant
      - SUPERVISOR_SHARE=${SUPERVISOR_SHARE}
      - SUPERVISOR_NAME=hassio_supervisor
      - DBUS_SYSTEM_BUS_ADDRESS=unix:path=/var/run/dbus/system_bus_socket
    volumes:
      - ${SUPERVISOR_SHARE}:/data
      - ./scripts:/scripts
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket

  plex:
    restart: always
    container_name: plex
    image: plexinc/pms-docker:public
    network_mode: host
    volumes:
      - ${MEDIA_ROOT}/complete/movies:/data/movies
      - ${MEDIA_ROOT}/complete/tv:/data/tv
      - ${CONFIG_ROOT}/plex:/config
    environment:
      - UID=${PUID}
      - GIP=${PGID}
      - TZ=${TZ}
      - PLEX_CLAIM="claim-vkxenUw3EnQ9mpyyH4oJ"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
