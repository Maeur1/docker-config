version: '3.8'
services:

  ros_bridge:
    container_name: ros_bridge
    restart: always
    image: ros:foxy-ros1-bridge
    environment:
      - "ROS_HOSTNAME=hub"
      - "ROS_MASTER_URI=http://hub:11311"
    command: ros2 run ros1_bridge dynamic_bridge

  ros:
    container_name: ros
    image: ros:noetic-ros-core
    restart: always
    network_mode: host
    ports:
      - "11311:11311"
    command: roscore


  ngnix-manager:
    container_name: ngnix-proxy-manager
    image: jc21/nginx-proxy-manager:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    volumes:
      - ./nginx-proxy-manager-config.json:/app/config/production.json
      - ${NGNIX_PROXY_MANAGER_DATA}/data:/data
      - ${NGNIX_PROXY_MANAGER_DATA}/letsencrypt:/etc/letsencrypt
    depends_on:
      - mysql
 
  wordpress:
    container_name: wordpress
    image: wordpress
    restart: unless-stopped
    links:
      - mysql
    environment:
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
    ports:
      - "8888:80"

  mysql:
    container_name: mysql
    restart: always
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ${DATABASE_ROOT}:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - MYSQL_DATABASE=${WORDPRESS_DB_NAME}
    ports:
      - "3306:3306"


  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MEDIA_ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${CONFIG_ROOT}/jackett:/config # config files

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/sonarr:/config # config files
      - ${MEDIA_ROOT}/complete/tv:/tv # tv shows folder
      - ${MEDIA_ROOT}/downloads:/downloads # download folder

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_ROOT}/radarr:/config # config files
      - ${MEDIA_ROOT}/complete/movies:/movies # movies folder
      - ${MEDIA_ROOT}/downloads:/downloads # download folder

  flaresolver:
    container_name: flaresolver
    image: flaresolverr/flaresolverr
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env

 #jellyfin:
 #  restart: unless-stopped
 #  container_name: jellyfin
 #  image: jellyfin/jellyfin:unstable
 #  volumes:
 #    - /etc/jellyfin:/etc/jellyfin
 #    - /var/cache/jellyfin:/var/cache/jellyfin
 #    - /var/lib/jellyfin:/var/lib/jellyfin
 #    - /var/log/jellyfin:/var/log/jellyfin
 #    - ${MEDIA_ROOT}/complete:/media/nfs/complete # media library
 #  devices:
 #    - /dev/dri/renderD128:/dev/dri/renderD128
 #    - /dev/dri/card0:/dev/dri/card0
 #  environment:
 #    - JELLYFIN_CACHE_DIR=/var/cache/jellyfin
 #    - JELLYFIN_CONFIG_DIR=/etc/jellyfin
 #    - JELLYFIN_DATA_DIR=/var/lib/jellyfin
 #    - JELLYFIN_LOG_DIR=/var/log/jellyfin
 #    - PUID=${PUID}
 #    - PGID=${PGID}
 #    - TZ=${TZ}
 #  privileged: true
 #  ports:
 #    - "8097"

  plex:
    restart: always
    container_name: plex
    image: plexinc/pms-docker:public
    network_mode: host
    volumes:
      - ${MEDIA_ROOT}/complete/movies:/data/movies
      - ${MEDIA_ROOT}/complete/tv:/data/tv
      - ${CONFIG_ROOT}/plex:/config
    environment:
      - UID=${PUID}
      - GIP=${PGID}
      - TZ=${TZ}
      - PLEX_CLAIM="claim-vkxenUw3EnQ9mpyyH4oJ"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
